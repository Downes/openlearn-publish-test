<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>4.1 Week 4 glossary</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="4.1-Week-4-glossary">
<h1>4.1 Week 4 glossary</h1>
<p>Here is an alphabetical list of the terms introduced this week, for quick look-up.</p>
<hr class="docutils" />
<div class="section" id="Programming-and-data-analysis-concepts">
<h2>Programming and data analysis concepts</h2>
<p>The <strong>bitwise operators</strong><code class="docutils literal notranslate"><span class="pre">&amp;amp;</span></code> (and) and <code class="docutils literal notranslate"><span class="pre">|</span></code> (or) are used in pandas to build more complicated expressions from two comparison expressions (typically involving column comparisons).</p>
<p>A <strong>Boolean</strong> has one of two possible values: <code class="docutils literal notranslate"><span class="pre">True</span></code> or <code class="docutils literal notranslate"><span class="pre">False</span></code>.</p>
<p>A <strong>Comma Separated Values (CSV)</strong> file is a plain text file that is used to hold tabular data.</p>
<p>A <strong>list</strong> is a sequence of values, separated by commas, and written within square brackets.</p>
<p>There are six <strong>comparison operators</strong> that can be used to compare number, string and date values. Expressions composed of these operators evaluate to <code class="docutils literal notranslate"><span class="pre">True</span></code> or <code class="docutils literal notranslate"><span class="pre">False</span></code>. These operators can also be used to compare every value in a column, row by row, against some number, string or date value. When used in this manner the operators return a series of Boolean values.</p>
<p>The <strong>‘dot’ notation</strong> is used to access a dataframe’s methods and attributes.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">Series</span></code> data type is a collection of values with an integer index that starts from zero. Each column in a dataframe is an example of the <code class="docutils literal notranslate"><span class="pre">Series</span></code> data type. The <code class="docutils literal notranslate"><span class="pre">Series</span></code> data type has many of the same methods as the <code class="docutils literal notranslate"><span class="pre">DataFrame</span></code> data type.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">object</span></code> data type is how pandas represents strings.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">datetime64</span></code> data type is how pandas represents dates.</p>
<p>The <code class="docutils literal notranslate"><span class="pre">int64</span></code> data type is how pandas represents integers (whole numbers).</p>
<p>The <code class="docutils literal notranslate"><span class="pre">float64</span></code> data type is how pandas represents floating point numbers (decimals).</p>
<hr class="docutils" />
</div>
<hr class="docutils" />
<div class="section" id="Functions-and-methods">
<h2>Functions and methods</h2>
<p><code class="docutils literal notranslate"><span class="pre">asType(aType)</span></code> when applied to a dataframe column, the method changes the data type of each value in that column to the type given by the string <code class="docutils literal notranslate"><span class="pre">aType</span></code>.</p>
<p><code class="docutils literal notranslate"><span class="pre">datetime(yyyy,</span> <span class="pre">mm,</span> <span class="pre">dd)</span></code> the function takes three arguments, <code class="docutils literal notranslate"><span class="pre">yyyy</span></code> a four digit integer representing a year, <code class="docutils literal notranslate"><span class="pre">mm</span></code> a two digit integer representing a month and <code class="docutils literal notranslate"><span class="pre">dd</span></code> a two digit integer representing a day. From these arguments the function creates and returns a value of <code class="docutils literal notranslate"><span class="pre">datetime64</span></code>.</p>
<p><code class="docutils literal notranslate"><span class="pre">dropna()</span></code> when applied to a dataframe returns a new dataframe without the rows that have at least one missing value.</p>
<p><code class="docutils literal notranslate"><span class="pre">head()</span></code> gets and displays the first five rows of a dataframe. Optionally the method can take an integer argument to specify how many rows (from and including row 0) to get and display.</p>
<p><code class="docutils literal notranslate"><span class="pre">iloc[index]</span></code> gets and displays the row in the dataframe indicated by the integer argument <code class="docutils literal notranslate"><span class="pre">index</span></code>.</p>
<p><code class="docutils literal notranslate"><span class="pre">isnull()</span></code> is a series method that checks which rows in that series have a missing value.</p>
<p><code class="docutils literal notranslate"><span class="pre">fillna(value)</span></code> is a series method that returns a new series in which all missing values have been filled with the given value.</p>
<p><code class="docutils literal notranslate"><span class="pre">plot()</span></code> when applied to a dataframe column of numeric values, the method displays a graph of those values. The x-axis shows the dataframe’s index and the y-axis the range of the column’s values. Before the method is called you first need to execute <code class="docutils literal notranslate"><span class="pre">%matplotlib</span> <span class="pre">inline</span></code>.</p>
<p><code class="docutils literal notranslate"><span class="pre">read_csv(csvFile)</span></code> creates a dataframe from the dataset in the CSV file.</p>
<p><code class="docutils literal notranslate"><span class="pre">rename(columns={oldName</span> <span class="pre">:</span> <span class="pre">newName})</span></code> renames the column <code class="docutils literal notranslate"><span class="pre">oldName</span></code> to <code class="docutils literal notranslate"><span class="pre">newName</span></code>.</p>
<p><code class="docutils literal notranslate"><span class="pre">str.rstrip(suffix)</span></code> when applied to a dataframe column of string values, the method removes the argument <code class="docutils literal notranslate"><span class="pre">suffix</span></code> from the end of each string value in the column.</p>
<p><code class="docutils literal notranslate"><span class="pre">tail()</span></code> gets and displays the last five rows of a dataframe. Optionally the method can take an integer argument to specify how many rows (until and including the last row) to get and display.</p>
<p><code class="docutils literal notranslate"><span class="pre">to_datetime(aSeries)</span></code> when applied to a series, typically a column from a dataframe, this function returns a new series in which each value in <code class="docutils literal notranslate"><span class="pre">aSeries</span></code> has been changed to type <code class="docutils literal notranslate"><span class="pre">datetime64</span></code>.</p>
<hr class="docutils" />
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>